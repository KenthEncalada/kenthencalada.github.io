I"<<h2 id="factores-de-calidad-del-software">Factores de calidad del software</h2>

<h3 id="calidad-del-software">Calidad del Software</h3>

<p>Es el grado con el que un sistema, componente o proceso cumple los requerimientos especificados y las necesidades o expectativas del cliente o usuario.</p>

<p>Factores que determinan la calidad del software. Se pueden clasificar en dos grandes grupos (Pressman):</p>

<ul>
  <li>
    <p>Medidas Directas</p>

    <p>La medida o medici√≥n decimos que es directa, cuando disponemos de un instrumento de medida que nos muestra un resultado (generalmente num√©rico).</p>
  </li>
  <li>
    <p>Medidas Indirectas</p>

    <p>Cuando hablamos de sistemas inform√°ticos no siempre es posible realizar una medida directa, porque no disponemos del instrumento adecuado que nos permita realizar esa medici√≥n</p>
  </li>
</ul>

<h3 id="m√©tricas-del-software">M√©tricas del Software</h3>

<p>Son las que est√°n relacionadas con el desarrollo del software como funcionalidad, complejidad, eficiencia.</p>

<ul>
  <li>
    <p>M√©tricas t√©cnicas</p>

    <p>Se centran en las caracter√≠sticas del software. Aqu√≠ medimos la complejidad l√≥gica y el grado de modularidad del sistema. Mide la estructura del sistema, el c√≥mo est√° hecho.</p>
  </li>
  <li>
    <p>M√©tricas de calidad</p>

    <p>Son todas las m√©tricas de software que definen de una u otra forma la calidad del software; tales como correcci√≥n, exactitud,integridad, facilidad de uso, estructuraci√≥n o modularidad, pruebas, facilidad de mantenimiento, reusabilidad, cohesi√≥n del m√≥dulo, acoplamiento del m√≥dulo, etc.</p>
  </li>
</ul>

<p>Proporcionan una indicaci√≥n de c√≥mo se ajusta el software a los requisitos impl√≠citos y expl√≠citos del cliente. Es decir c√≥mo voy a medir para que mi sistema se adapte a los requisitos que me pide el cliente.</p>

<p><strong>Correcci√≥n:</strong> es el grado en que el software desempe√±a la funci√≥n para la que fue creado y se mide en defectos por KLDC.</p>

<p><strong>Facilidad de Mantenimiento:</strong> es la sencillez con que un programa puede corregirse si se encuentra un error, al adaptarse si su entorno cambio o mejorar si el cliente cambia los requisitos y se mide en forma indirecta en TMC (Tiempo Medio de Cambio).</p>

<p><strong>Integridad:</strong> es la habilidad de un sistema para resistir ataques que requiere la definici√≥n de amenaza y seguridad y se calcula: integridad = 1 ‚Äì (amenaza * (1 ‚Äì seguridad)).</p>

<p><strong>Facilidad de uso:</strong> Es el intento por cuantificar la sencillez de una aplicaci√≥n al utilizarla.</p>

<ul>
  <li>
    <p>M√©tricas de Productividad</p>

    <p>Se centran en el rendimiento del proceso de la ingenier√≠a del software. Es decir qu√© tan productivo va a ser el software que voy a dise√±ar. Se refiere a las caracter√≠sticas del software.</p>
  </li>
  <li>
    <p>M√©tricas de costo</p>

    <p>se centra en el costo total del sistema inform√°tico.</p>
  </li>
  <li>
    <p>M√©tricas orientadas al tama√±o</p>

    <p>Esta nos permite conocer el tiempo en el que se terminar√° el software y cu√°ntas personas se necesitan para su desarrollo, aqu√≠ medimos las variables con las que desarrollamos el software.</p>
  </li>
</ul>

<p>Con los datos registrados durante la elaboraci√≥n del proyecto podemos generar al final de dicho proyecto el siguiente conjunto de m√©tricas:</p>

<ol>
  <li>Productividad = KLDC /Esfuerzo</li>
  <li>Calidad = Errores / LDC</li>
  <li>Documentaci√≥n = Pp.doc./LDC</li>
  <li>costo = $(000)/LDC</li>
</ol>

<ul>
  <li>
    <p>M√©tricas orientadas a la funci√≥n o puntos de funci√≥n</p>

    <p>Las m√©tricas de funci√≥n se centran en la funcionalidad o utilidad del programa. Los puntos de funci√≥n nos indican la medida de la productividad.</p>
  </li>
</ul>

<h2 id="problemas-en-el-desarrollo-de-software">Problemas en el desarrollo de software</h2>

:ET